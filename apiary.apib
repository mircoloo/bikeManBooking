openapi: 3.0.0
info:
  version: '1.0'
  title: "BikeManBooking OpenAPI 3.0"
  description: API per gestione delle prenotazioni per le manutenzioni della propria bicicletta.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /storico:
    get:
      description: >-
        Ritorna tutte le prenotazioni
      summary: Ritorna la lista di tutte le prenotazioni
      responses:
        '200':
          description: 'Collezione di prenotazioni'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prenotazione'
    delete:
      description: >-
        Elimina la prenotazione futura selezionata dall'utente
      summary: Elimina la prenotazione selezionata
      responses:
        '200':
          description: 'Eliminazione di una prenotazione'
          content:
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Prenotazione'
          
  /calendarioU:
    get:
      description: >-
        Mostra il calendario per l'utente
      summary:  Mostra il calendario per l'utente
      responses:
        '200':
          description: "Mostra calendario utente per l'utente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prenotazione'
    post:
      description: >-
        Crea una nuova prenotazione
      summary: Crea una nuova prenotazione
      responses:
        '201':
          description: 'Crea una nuova prenotazione'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prenotazione'
        '502':
          description: 'Prenotazione non effetutata: uno o più parametri non sono validi'
          
  /calendarioM:
    get:
      description: >-
        Mostra il calendario per il meccanico
      summary: Mostra il calendario per il meccanico
      responses:
        '200':
          description: "Mostra calendario utente per l'utente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prenotazione'
  /profiloM:
    get:
      description: >-
        Mostra le informazione di base dell'officina, quali numero di telefono e email, indirizzo, ecc..
      summary: Mostra le informazione di base dell'officina 
      responses:
        '200':
          description: "Mostra il profilo dell'officina"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
    put:
      description: >-
        Aggiorna le informazioni di base dell'officina
      summary: Aggiorna le informazioni base dell'officina
      responses:
        '200':
          description: "Mostra il profilo dell'officina"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
    post:
      description: >-
        Crea un nuovo profilo meccanico
      summary: Crea un nuovo profilo meccanico
      responses:
        '201':
          description: 'Crea un nuovo profilo meccanico'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
  
  /profiloU:
    get:
      description: >-
        Mostra le informazione di base dell'utente, quali numero di telefono e email
      summary: Mostra le informazione di base dell'utente 
      responses:
        '200':
          description: "Mostra il profilo dell'utente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
    put:
      description: >-
        Aggiorna le informazioni di base dell'utente
      summary: Aggiorna le informazioni base dell'utente
      responses:
        '201':
          description: "Mostra il profilo dell'utente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
    post:
      description: >-
        Crea un nuovo profilo utente
      summary: Crea un nuovo profilo utente
      responses:
        '201':
          description: 'Crea un nuovo profilo utente'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
                  
  /auth:
    post:
      description: >-
        Gestisce la creazione di un nuovo account e il login
      summary: Gestisce l'autenticazione
      responses:
        '201':
          description: 'Gestisce la creazione di un nuovo account e/o il login'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utente'
  
components:
  schemas:
  
    Utente:
      type: object
      required: 
        - email
        - password
        - nome
        - cognome
        - bikes
        - ebikes
        - telefono
        - indirizzo
        - client
        - token
      properties:
        email:
          type: string
          example: "mario.rossi@gmail.com"
          description: "Indirizzo email dell'utente"
        password:
          type: string
          example: "Password1"
          description: "Password dell'utente"
        nome: 
          type: string
          example: "Mario"
          description: "Nome dell'utente"
        cognome: 
          type: string
          example: "Rossi"
          description: "Cognome dell'utente"
        bikes:
          type: array
          items:
            type: string
          example: ["colnago", "giant", "willier"]
          description: "Array contente le bici muscolari dell'utente"
        ebikes:
          type: array
          items:
            type: string
          example: ["cube", "scott"]
          description: "Array contente le bici elettriche dell'utente"
        telefono:
          type: string
          example: "333 1234567"
          description: "Numero di telefono dell'utente"
        indirizzo:
          type: string
          example: "Via Brigata Mantova, 41, 38061 Ala TN"
          description: "Indirizzo fisico dell'officina"
        client:
          type: boolean
          example: "true"
          description: "Attributo che indica se l'utente è un cliente o il proprietario dell'officina"
        token:
          type: string
          description: "Token usato per l'autenticazione"
        
    Prenotazione:
      type: object
      required:
        - data
        - utente
        - tipoProblema
        - bici
      properties:
        data:
          type: string # this include dates 
          example: "2022-05-26"
          description: 'Data della prenotazione'
        utente:
          type: string
          example: "mario.rossi@gmail.com"
          description: 'Utente che ha effettuato la prenotazione'
        tipoProblema:
          type: string
          example: "Regolazione sella"
          description: 'Descrizione del problema'
        bici:
          type: string
          example: "willier"
          description: 'Marca della bici che richiede la manutenzione'